//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    fastq = null
    bam = null
    ref_genome = null
    ref_annotation = null
    transcriptome_source = "reference-guided"
    threads = 4
     // Thresholds for viewing isoforms in report table
    isoform_table_nrows = 5000

    out_dir = "output"
    sample = null
    sample_sheet = null
    aws_image_prefix = null
    aws_queue = null
    analyse_unclassified = false
    version = false

    monochrome_logs = false
    igv = false
    validate_params = true
    show_hidden_params = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wf'

    // Process cDNA reads using pychopper, turn off for direct RNA:
    direct_rna = false
    // Options passed to pychopper:
    pychopper_opts = null
    pychopper_backend = "edlib"
    cdna_kit = "SQK-PCS109"

    // Extra option passed to minimap2 when generating index
    minimap2_index_opts = "-k 14"

    // Extra options passed to minimap2
    // For SIRV data
    //minimap2_opts = "-uf --splice-flank=no"
    // AFor non-SIRV data:
    minimap2_opts = "-uf"

    // Minmum mapping quality
    minimum_mapping_quality = 40

    // Internal priming filter context size:
    poly_context = 24

    // Maximum allowed poly(A) length in the genome near the 3' end of mapping:
    max_poly_run = 8

    // Minimium number of reads in BAM bundles:
    bundle_min_reads = 50000

    // Options passed to stringtie:
    stringtie_opts = "--conservative"

    // Options passed to gffcompare:
    gffcompare_opts = "-R"

    // Plot gffcompare results:
    plot_gffcmp_stats = true

    disable_ping = false
    store_dir = null

    // de options
    de_analysis = false
    ref_transcriptome = null
    min_samps_gene_expr	= 3
    min_samps_feature_expr = 1
    min_gene_expr = 10
    min_feature_expr = 3


    wf {
      example_cmd = [
        "--de_analysis",
        "--direct_rna",
        "--fastq 'wf-transcriptomes-demo/differential_expression_fastq'",
        "--minimap2_index_opts '-k 15'",
        "--ref_annotation 'wf-transcriptomes-demo/gencode.v22.annotation.chr20.gtf'",
        "--ref_genome 'wf-transcriptomes-demo/hg38_chr20.fa'",
        "--sample_sheet 'wf-transcriptomes-demo/sample_sheet.csv'",
      ]
    agent = null
    container_sha = "shac733d952a14257cf3c5c5d5d44c6aed84d5fe5a1"
	common_sha = "sha1c69fd30053aad5d516e9567b3944384325a0fee"
    }
}

manifest {
    name            = 'epi2me-labs/wf-transcriptomes'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-transcriptomes'
    description     = 'Transcriptome analysis including differential expression as well as assembly and annotation of cDNA and direct RNA sequencing data.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=23.04.2'
    version         = 'v1.7.0'
}

epi2melabs {
  tags = "wf-transcriptomes,isoforms,transcriptomics,denovo,human,mouse,plant"
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:isoforms {
        container = "ontresearch/wf-transcriptomes:${params.wf.container_sha}"
    }
    withLabel:wf_common {
        container = "ontresearch/wf-common:${params.wf.common_sha}"
    }

    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:isoforms {
                container = "${params.aws_image_prefix}-wf-transcriptomes:${params.wf.container_sha}"
            }
            withLabel:wf_common {
                container = "${params.aws_image_prefix}-wf-common:${params.wf.common_sha}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}

env {
    PYTHONNOUSERSITE = 1
    JAVA_TOOL_OPTIONS = "-Xlog:disable -Xlog:all=warning:stderr"
}
